type Pet {
    id: ID!
    name: String!
    animalType: String!
    breed: String!
    age: Int!
    householdEircode: String!
}

type Household {
    eircode: ID!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
}

type PetStatistics {
    averageAge: Float
    oldestAge: Int
    totalCount: Int
}

input HouseholdInput {
    eircode: ID!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
}

type Query {
    getAllHouseholds: [Household!]!
    getPetsByAnimalType(animalType: String!): [Pet!]!
    getHousehold(eircode: ID!): Household
    getPet(id: ID!): Pet
    getPetStatistics: PetStatistics!
}

type Mutation {
    createHousehold(input: HouseholdInput!): Household!
    deleteHousehold(eircode: ID!): Boolean!
    deletePet(id: ID!): Boolean!
}